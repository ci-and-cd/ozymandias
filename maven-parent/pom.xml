<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.sviperll</groupId>
        <artifactId>ozymandias</artifactId>
        <version>0.6-SNAPSHOT</version>
    </parent>
    <groupId>com.github.sviperll</groupId>
    <artifactId>maven-parent</artifactId>
    <version>0.6-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>maven-parent</name>
    <description>Artifact to use as universal maven parent</description>
    <url>https://github.com/sviperll/ozymandias/tree/master/maven-parent</url>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <failOnWarning>true</failOnWarning>
                    <ignoredUnusedDeclaredDependencies combine.children="append">
                        <ignoredUnusedDeclaredDependency>junit:junit:*:*</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.code.findbugs:annotations:*:*</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.code.findbugs:jsr305:*:*</ignoredUnusedDeclaredDependency>
                    </ignoredUnusedDeclaredDependencies>
                </configuration>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <phase>process-test-classes</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.takari.maven.plugins</groupId>
                <artifactId>takari-lifecycle-plugin</artifactId>
                <version>1.12.0-SNAPSHOT</version> <!-- <version>1.12.0</version> -->
                <configuration>
                    <accessRulesViolation>error</accessRulesViolation>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <!--
                         Eclipse JDT seems not to be ready for prime time.
                         javax.lang.model.util.Elements#asMemberOf is not working in Eclipse...
                    -->
                    <compilerId>javac</compilerId><!-- <compilerId>jdt</compilerId> -->
                    <proc>proc</proc>
                    <encoding>${project.build.sourceEncoding}</encoding>

                    <verbose>false</verbose>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <compilerArgs combine.self="append">
                        <arg>-Xlint</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>

                    <!-- Compiler plugin uses Java compiler API since version 3.0.
                    Usage of compiler API is much better than forking javac executable.
                    Compiler API is much faster as it's run in same process.
                    And most importatly ALL compiler messages are printed by maven.
                    When standalone javac executable is run maven parses it's output and
                    some messages are lost in the process!!! -->
                    <forceJavacCompilerUse>false</forceJavacCompilerUse>
                    <useIncrementalCompilation>true</useIncrementalCompilation>
                    <fork>false</fork>

                    <verbose>false</verbose>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <compilerArgs combine.self="append">
                        <arg>-Xlint</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <!--
                        This is important.
                        If your project contains annotation processor than it must be compiled without
                        services file otherwise Java compiler fail silently because
                        it can't find annotation processor stated in this file because
                        annotation processor is not compiled yet!
                        -->
                        <id>remove-annotation-processor-services-meta-info</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.outputDirectory}</directory>
                                    <includes>
                                        <include>META-INF/services/javax.annotation.processing.Processor</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <!--
                        Services file for annotation processors must be copied to output directory
                        when all java files are compiled (including annotation processors)
                        -->
                        <id>copy-annotation-processor-services-meta-info</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>META-INF/services/javax.annotation.processing.Processor</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <configuration>
                    <rules combine.self="append">
                        <DependencyConvergence />
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.5</version>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <!--
                    Do not copy annotation processor services file. It's done by
                    another (copy-annotation-processor-services-meta-info)
                    execution of resources plugin
                    -->
                    <exclude>META-INF/services/javax.annotation.processing.Processor</exclude>
                </excludes>
            </resource>
        </resources>
    </build>
    <profiles>
        <profile>
            <id>maven-compiler-plugin-compile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profileprovide>java-compiler-plugin</profileprovide>
            </properties>
        </profile>
        <profile>
            <!-- Use takari-lifecycle-plugin instead of maven-compiler-plugin -->
            <id>takari-lifecycle-plugin-compile</id>
            <properties>
                <profileprovide>java-compiler-plugin</profileprovide>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>java6</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profileprovide>java-version</profileprovide>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <source>1.6</source>
                            <target>1.6</target>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <source>1.6</source>
                            <target>1.6</target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>java7</id>
            <properties>
                <profileprovide>java-version</profileprovide>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <source>1.7</source>
                            <target>1.7</target>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <source>1.7</source>
                            <target>1.7</target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>java8</id>
            <properties>
                <profileprovide>java-version</profileprovide>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            Use standalone javac executable to compile java
            when bootclasspath needs to be set.
        -->
        <profile>
            <id>fork-javac</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            Set bootclasspath when needed
        -->
        <profile>
            <id>java6-bootclasspath</id>
            <properties>
                <profiledep>java6,fork-javac,maven-compiler-plugin-compile</profiledep>
                <profileprovide>bootclasspath</profileprovide>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK6_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK6_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--
            Set bootclasspath when needed
        -->
        <profile>
            <id>java7-bootclasspath</id>
            <properties>
                <profiledep>java7,fork-javac,maven-compiler-plugin-compile</profiledep>
                <profileprovide>bootclasspath</profileprovide>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK7_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK7_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--
            Set bootclasspath when needed
        -->
        <profile>
            <id>java8-bootclasspath</id>
            <properties>
                <profiledep>java8,fork-javac,maven-compiler-plugin-compile</profiledep>
                <profileprovide>bootclasspath</profileprovide>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK8_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK8_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>nexus-deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-deploy</id>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <configuration>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <serverId>oss-sonatype-nexus</serverId>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-deploy</id>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
