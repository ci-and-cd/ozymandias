<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.sviperll</groupId>
        <artifactId>ozymandias</artifactId>
        <version>0.10-successor-SNAPSHOT</version>
    </parent>
    <groupId>com.github.sviperll</groupId>
    <artifactId>maven-parent</artifactId>
    <packaging>pom</packaging>
    <name>maven-parent</name>
    <description>Artifact to use as universal maven parent</description>
    <url>https://github.com/sviperll/ozymandias/tree/master/maven-parent</url>
    <properties>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-source-plugin.version>2.4</maven-source-plugin.version>
        <maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
        <maven-site-plugin.version>3.4</maven-site-plugin.version>
        <pitest-maven.version>1.1.5</pitest-maven.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- PITest is mutation testing coverage tool -->
            <!-- Mutation testing should be used to find out your test coverage -->
            <!-- Version 1.1.6 provides report goal, but it's not released yet -->
            <!--
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest-maven.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>dependency-info</report>
                            <report>license</report>
                            <report>dependencies</report>
                            <report>issue-tracking</report>
                            <report>scm</report>
                            <report>project-team</report>
                            <report>modules</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <!-- 2.2 ,2.3 and 2.4 doesn't work with git -->
                    <version>2.5.2</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <useReleaseProfile>false</useReleaseProfile>
                        <arguments>-Prelease-profile</arguments>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest-maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                    <configuration>
                        <passphraseServerId>gpg</passphraseServerId>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.1</version>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Low</threshold>
                        <xmlOutput>true</xmlOutput>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>
                    <configuration>
                        <ignoredUnusedDeclaredDependencies combine.children="append">
                        </ignoredUnusedDeclaredDependencies>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.takari.maven.plugins</groupId>
                    <artifactId>takari-lifecycle-plugin</artifactId>
                    <version>1.11.7</version>
                    <configuration>
                        <accessRulesViolation>error</accessRulesViolation>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <!--
                             Eclipse JDT seems not to be ready for prime time.
                             javax.lang.model.util.Elements#asMemberOf is not working in Eclipse JDT...
                        -->
                        <compilerId>javac</compilerId><!-- <compilerId>jdt</compilerId> -->
                        <proc>proc</proc>
                        <encoding>${project.build.sourceEncoding}</encoding>

                        <source>${java.version}</source>
                        <target>${java.version}</target>

                        <verbose>false</verbose>
                        <showDeprecation>true</showDeprecation>
                        <showWarnings>true</showWarnings>
                        <compilerArgs combine.children="append">
                            <arg>-Xlint</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>

                        <!-- Compiler plugin uses Java compiler API since version 3.0.
                        Usage of compiler API is much better than forking javac executable.
                        Compiler API is much faster as it's run in same process.
                        And most importatly ALL compiler messages are printed by maven.
                        When standalone javac executable is run maven parses it's output and
                        some messages are lost in the process!!! -->
                        <forceJavacCompilerUse>false</forceJavacCompilerUse>
                        <useIncrementalCompilation>true</useIncrementalCompilation>
                        <fork>false</fork>

                        <source>${java.version}</source>
                        <target>${java.version}</target>

                        <verbose>false</verbose>
                        <showDeprecation>true</showDeprecation>
                        <showWarnings>true</showWarnings>
                        <compilerArgs combine.children="append">
                            <arg>-Xlint</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                    <configuration>
                        <rules combine.children="append">
                        </rules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.5</version>
                </plugin>
                <plugin>
                    <groupId>com.github.sviperll</groupId>
                    <artifactId>coreext-maven-plugin</artifactId>
                    <version>${ozymandias.version}</version>
                    <configuration>
                        <extensions combine.children="append">
                            <extension>
                                <groupId>com.github.sviperll</groupId>
                                <artifactId>maven-profiledep-extension</artifactId>
                                <version>${ozymandias.version}</version>
                            </extension>
                        </extensions>
                    </configuration>
                    <executions>
                        <execution>
                            <id>check-coreext</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.5.4</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-module-markdown</artifactId>
                            <version>1.6</version>
                        </dependency>
                        <dependency>
                            <groupId>net.trajano.wagon</groupId>
                            <artifactId>wagon-git</artifactId>
                            <version>2.0.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <!--
                        This is important.
                        If your project contains annotation processor than it must be compiled without
                        services file otherwise Java compiler fail silently because
                        it can't find annotation processor stated in this file because
                        annotation processor is not compiled yet!
                        -->
                        <id>remove-annotation-processor-services-meta-info</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.outputDirectory}</directory>
                                    <includes>
                                        <include>META-INF/services/javax.annotation.processing.Processor</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <!--
                        Services file for annotation processors must be copied to output directory
                        when all java files are compiled (including annotation processors)
                        -->
                        <id>copy-annotation-processor-services-meta-info</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>META-INF/services/javax.annotation.processing.Processor</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <version>(,2.1.0),(2.1.0,2.2.0),(2.2.0,)</version>
                            <message>Maven 2.1.0 and 2.2.0 produce incorrect GPG signatures and checksums respectively.</message>
                        </requireMavenVersion>
                    </rules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.sviperll</groupId>
                <artifactId>coreext-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <!--
                    Do not copy annotation processor services file. It's done by
                    another (copy-annotation-processor-services-meta-info)
                    execution of resources plugin
                    -->
                    <exclude>META-INF/services/javax.annotation.processing.Processor</exclude>
                </excludes>
            </resource>
        </resources>
    </build>
    <profiles>
        <profile>
            <id>maven-compiler</id>
            <properties>
                <profile.provides>java-compiler-plugin</profile.provides>
                <profile.active>true</profile.active>
            </properties>
        </profile>
        <profile>
            <!-- Use takari-lifecycle-plugin instead of maven-compiler-plugin -->
            <id>takari-compiler</id>
            <properties>
                <profile.provides>java-compiler-plugin</profile.provides>
                <profile.depends>takari-compiler-id</profile.depends>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>takari-javac</id>
            <properties>
                <profile.provides>takari-compiler-id</profile.provides>
                <profile.depends>takari-compiler</profile.depends>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <compilerId>javac</compilerId>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>takari-jdt</id>
            <properties>
                <profile.provides>takari-compiler-id</profile.provides>
                <profile.depends>takari-compiler</profile.depends>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <compilerId>jdt</compilerId>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>java6</id>
            <properties>
                <profile.provides>java-version</profile.provides>
                <profile.active>true</profile.active>
                <java.version>1.6</java.version>
            </properties>
        </profile>
        <profile>
            <id>java7</id>
            <properties>
                <profile.provides>java-version</profile.provides>
                <java.version>1.7</java.version>
            </properties>
        </profile>
        <profile>
            <id>java8</id>
            <properties>
                <profile.provides>java-version</profile.provides>
                <java.version>1.8</java.version>
            </properties>
        </profile>

        <!--
            Use standalone javac executable to compile java
            when bootclasspath needs to be set.
        -->
        <profile>
            <id>fork-javac</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            Set bootclasspath when needed
        -->
        <profile>
            <id>java6-bootclasspath</id>
            <properties>
                <profile.depends>java6,fork-javac,maven-compiler-plugin-compile</profile.depends>
                <profile.provides>bootclasspath</profile.provides>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK6_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK6_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--
            Set bootclasspath when needed
        -->
        <profile>
            <id>java7-bootclasspath</id>
            <properties>
                <profile.depends>java7,fork-javac,maven-compiler-plugin-compile</profile.depends>
                <profile.provides>bootclasspath</profile.provides>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK7_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK7_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--
            Set bootclasspath when needed
        -->
        <profile>
            <id>java8-bootclasspath</id>
            <properties>
                <profile.depends>java8,fork-javac,maven-compiler-plugin-compile</profile.depends>
                <profile.provides>bootclasspath</profile.provides>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK8_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.takari.maven.plugins</groupId>
                        <artifactId>takari-lifecycle-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-bootclasspath</arg>
                                <arg>${env.JDK8_HOME}/jre/lib/rt.jar</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>no-deploy-to-maven-repository</id>
            <properties>
                <profile.provides>deploy-to-maven-repository</profile.provides>
                <profile.depends>no-default-deploy</profile.depends>
            </properties>
        </profile>
        <profile>
            <id>default-deploy</id>
            <properties>
                <profile.provides>default-deploy-choice,deploy-to-maven-repository</profile.provides>
            </properties>
        </profile>
        <profile>
            <id>no-default-deploy</id>
            <properties>
                <profile.provides>default-deploy-choice</profile.provides>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-deploy</id>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>nexus-deploy</id>
            <properties>
                <profile.provides>deploy-to-maven-repository</profile.provides>
                <profile.depends>no-default-deploy</profile.depends>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <configuration>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <serverId>oss-sonatype-nexus</serverId>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-deploy</id>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>has-main-class</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>${project.mainclass}</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <configuration>
                            <mainClass>${project.mainclass}</mainClass>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>executable</id>
            <properties>
                <profile.depends>has-main-class,bin-with-dependencies</profile.depends>
            </properties>
        </profile>
        <profile>
            <id>bin-with-dependencies</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <includeScope>runtime</includeScope>
                                    <excludeScope>provided</excludeScope>
                                    <excludeTransitive>false</excludeTransitive>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <classpathPrefix>lib/</classpathPrefix>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.2.1</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.github.sviperll</groupId>
                                <artifactId>bin-with-dependencies</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>create-archive</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptorRefs>
                                        <descriptorRef>bin-with-dependencies</descriptorRef>
                                    </descriptorRefs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>analyze-dependencies</id>
            <properties>
                <profile.active>true</profile.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>analyze-dependencies</id>
                                <goals>
                                    <goal>analyze-only</goal>
                                </goals>
                                <phase>process-test-classes</phase>
                                <configuration>
                                    <ignoreNonCompile>true</ignoreNonCompile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>strict-dependencies-usage</id>
            <properties>
                <profile.depends>analyze-dependencies</profile.depends>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>enforce-dependencies-versions</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dependencies-versions</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules combine.children="append">
                                        <DependencyConvergence />
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>strict-dependencies</id>
            <properties>
                <profile.active>true</profile.active>
                <profile.depends>strict-dependencies-usage,enforce-dependencies-versions</profile.depends>
            </properties>
        </profile>
        <profile>
            <id>release-profile</id>
            <properties>
                <profile.depends>bootclasspath,attach-sources,attach-javadocs,sign-artifacts,pitest-cover</profile.depends>
            </properties>
        </profile>
        <profile>
            <id>attach-sources</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>attach-javadocs</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sign-artifacts</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>findbugs-check</id>
            <properties>
                <profile.active>true</profile.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>findbugs-check</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pitest-cover</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <executions>
                            <execution>
                                <id>pitest-cover</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
